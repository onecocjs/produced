/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/areas/addAreas": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["AddAreasRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["AddAreasResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/areas/findAllAreasList": {
    /**
     * 返回两种数据格式，一种就是数据库存储的原始数据格式，另一种是针对前段 antd 的 tree 组件组织好的树结构数据集
     */
    get: {
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["FindAllAreasListResponse"];
        };
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/customer/authorizeToken": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["AuthorizeTokenRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["AuthorizeTokenResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/customer/bindCustomerCarNumber": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["BindCustomerCarNumberRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["BindCustomerCarNumberResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/customer/bindMobile": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["BindMobileRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["BindMobileResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/customer/checkAuthorizeToken": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["CheckAuthorizeTokenRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["CheckAuthorizeTokenResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/customer/completeCustomerInfo": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["CompleteCustomerInfoRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["CompleteCustomerInfoResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/customer/findOwnCarNumber": {
    get: {
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["FindOwnCarNumberResponse"];
        };
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/customer/findOwnInfo": {
    get: {
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["FindOwnInfoResponse"];
        };
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/customer/getCheckCode": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["GetCheckCodeRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["GetCheckCodeResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/devices/addDevice": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["AddDeviceRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["AddDeviceResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/devices/distributionArea": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["DistributionAreaRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["DistributionAreaResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/devices/distributionPricingRules": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["DistributionPricingRulesRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": unknown;
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/devices/findDeviceListForPage": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["FindDeviceListForPageRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["FindDeviceListForPageResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/devices/startWorking": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["StartWorkingRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["StartWorkingResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/employees/loginOfEmployee": {
    /**
     * 用于员工登录管理后台，该接口会返回一个授权票据，请注意票据有效时长为30分钟, 后续所有具有权限校验的接口在请求时请求头中必须携带 Authorization 字段，例：Authorization=Bearer 6ccdaecf-3fa1-43cd-9588-58dca0302a46
     */
    post: {
      requestBody: {
        "application/json": components["schemas"]["LoginOfEmployeeRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "application/json": components["schemas"]["LoginOfEmployeeResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/employees/loginOut": {
    /**
     * 用户登出请调用本接口清楚授权token
     */
    get: {
      responses: {
        /**
         * OK
         */
        "200": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/orders/findOrderListForPage": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["FindOrderListForPageRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["FindOrderListForPageResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/orders/findOwnOrderListForPage": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["FindOwnOrderListForPageRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["FindOwnOrderListForPageResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/orders/orderNotify": {
    post: {
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": string;
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/orders/unifiedOrder": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["UnifiedOrderRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["UnifiedOrderResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/parked/findParkedPageList": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["FindParkedPageListRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["FindParkedPageListResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/parked/reportEnterParkedInfo": {
    /**
     * 注意，在重复上传的背景下，如距离上一次上传的时间小于15分钟，那么系统则会认为车辆在调整姿态，所以会不断的更新入场时间，如果时间大于15分钟，那么系统认为车辆已经进入离开状态，则会更新车辆的离场时间，生成一条订单！
     */
    post: {
      requestBody: {
        "application/json": components["schemas"]["ReportParkedInfoRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["ReportParkedInfoResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/parked/reportLeaveParkedInfo": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["ReportLeaveParkedInfoRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["ReportLeaveParkedInfoResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/pricingRules/addPricingRules": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["AddPricingRulesRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["AddPricingRulesResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/pricingRules/findPricingRulesGroupForPage": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["FindPricingRulesGroupForPageRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["FindPricingRulesGroupForPageResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
  "/pricingRules/updatePricingRules": {
    post: {
      requestBody: {
        "application/json": components["schemas"]["UpdatePricingRulesRequest"];
      };
      responses: {
        /**
         * OK
         */
        "200": {
          "*/*": components["schemas"]["UpdatePricingRulesResponse"];
        };
        /**
         * Created
         */
        "201": unknown;
        /**
         * Unauthorized
         */
        "401": unknown;
        /**
         * Forbidden
         */
        "403": unknown;
        /**
         * Not Found
         */
        "404": unknown;
      };
    };
  };
}

export interface components {
  schemas: {
    AddAreasRequest: {
      /**
       * 地市名称
       */
      name: string;
      /**
       * 父级id，如果是第一级地址，那么请设置为ROOT
       */
      parentId: string;
    };
    AddAreasResponse: {
      /**
       * 创建时间
       */
      createTime?: string;
      /**
       * 地市id
       */
      id?: string;
      /**
       * 地市名称
       */
      name?: string;
      /**
       * 父级地市id
       */
      parentId?: string;
      /**
       * 最后修改时间
       */
      updateTime?: string;
    };
    AddDeviceModuleBean: {
      /**
       * 设备模块名称
       */
      name?: string;
      /**
       * 设备采购价
       */
      purchasePrice?: number;
    };
    AddDeviceRequest: {
      /**
       * 设备模块信息数组
       */
      deviceModuleBeans?: components["schemas"]["AddDeviceModuleBean"][];
      /**
       * 设备的imei编码
       */
      imei: string;
    };
    AddDeviceResponse: {
      /**
       * 设备所属地区id
       */
      areasId?: string;
      /**
       * 设备的录入时间
       */
      createTime?: string;
      /**
       * 设备id
       */
      id?: string;
      /**
       * 设备的imei码
       */
      imei?: string;
      /**
       * 设备盈利的金额
       */
      incomePrice?: number;
      /**
       * 设备的最后更新时间
       */
      updateTime?: string;
      /**
       * 设备的上岗时间
       */
      workingStartTime?: string;
      /**
       * 设备的工作状态
       */
      workingStatus?: string;
    };
    AddPricingRulesRequest: {
      /**
       * 设价规则描述信息
       */
      description: string;
      /**
       * 设价规则列表
       */
      pricingRulesRequests: components["schemas"]["PricingRulesRequest"][];
    };
    AddPricingRulesResponse: { [key: string]: any };
    AreasBean: {
      /**
       * 地市创建时间
       */
      createTime?: string;
      /**
       * 地市id
       */
      id?: string;
      /**
       * 地市名称
       */
      name?: string;
      /**
       * 地市的父级id
       */
      parentId?: string;
      /**
       * 地市最后修改时间
       */
      updateTime?: string;
    };
    AreasEntity: {
      createTime?: string;
      deleteTime?: string;
      id?: string;
      name?: string;
      parentId?: string;
      updateTime?: string;
    };
    AreasTreeBean: {
      /**
       * 子节点
       */
      children?: components["schemas"]["AreasTreeBean"][];
      /**
       * 地市id
       */
      key?: string;
      /**
       * 地市名称
       */
      title?: string;
    };
    AuthorizeTokenRequest: {
      /**
       * 微信授权code
       */
      code?: string;
    };
    AuthorizeTokenResponse: {
      /**
       * 客户实体bean
       */
      customerBean?: components["schemas"]["CustomerBean"];
      /**
       * 授权token
       */
      token?: string;
    };
    BindCustomerCarNumberRequest: {
      /**
       * 车牌号
       */
      carNumber?: string;
      /**
       * 个人id
       */
      customerId?: string;
    };
    BindCustomerCarNumberResponse: {
      /**
       * 个人基本信息
       */
      customerBean?: components["schemas"]["CustomerBean"];
      /**
       * 个人车牌号集合
       */
      customerCarBeans?: components["schemas"]["CustomerCarBean"][];
    };
    BindMobileRequest: {
      /**
       * 验证码
       */
      code?: string;
      /**
       * 手机号
       */
      mobile?: string;
    };
    BindMobileResponse: {
      /**
       * 个人信息
       */
      customerBean?: components["schemas"]["CustomerBean"];
    };
    CheckAuthorizeTokenRequest: {
      /**
       * 授权给用户的历史token
       */
      token?: string;
    };
    CheckAuthorizeTokenResponse: {
      /**
       * 客户实体bean
       */
      customerBean?: components["schemas"]["CustomerBean"];
      /**
       * 是否有效
       */
      exits?: boolean;
    };
    CompleteCustomerInfoRequest: {
      /**
       * 头像访问地址
       */
      avatarUrl?: string;
      /**
       * 用户性别， 1：男 、 0：女
       */
      gender?: string;
      /**
       * 用户id
       */
      id?: string;
      /**
       * 手机号
       */
      mobile?: string;
      /**
       * 用户微信昵称
       */
      nickName?: string;
    };
    CompleteCustomerInfoResponse: {
      /**
       * 客户实体数据
       */
      customerBean?: components["schemas"]["CustomerBean"];
    };
    CustomerBean: {
      /**
       * 微信头像地址
       */
      avatarUrl?: string;
      /**
       * 创建时间
       */
      createTime?: string;
      /**
       * 微信头像
       */
      gender?: string;
      /**
       * 主键id
       */
      id?: string;
      /**
       * 手机号
       */
      mobile?: string;
      /**
       * 用户微信昵称
       */
      nikeName?: string;
      /**
       * 最后更新时间
       */
      updateTime?: string;
    };
    CustomerCarBean: {
      carNumber?: string;
      createTime?: string;
      customerId?: string;
      id?: string;
      updateTime?: string;
    };
    DeviceEntity: {
      areasId?: string;
      createTime?: string;
      deleteTime?: string;
      id?: string;
      imei?: string;
      incomePrice?: number;
      pricingRulesGroupId?: string;
      updateTime?: string;
      workingStartTime?: string;
      workingStatus?: string;
    };
    DeviceModuleEntity: {
      costPrice?: number;
      createTime?: string;
      deleteTime?: string;
      deviceId?: string;
      id?: string;
      name?: string;
      updateTime?: string;
    };
    DistributionAreaRequest: {
      /**
       * 地区id
       */
      areasId: string;
      /**
       * 设备id
       */
      deviceId: string;
    };
    DistributionAreaResponse: {
      /**
       * 地市id
       */
      areasId: string;
      /**
       * 地市名称
       */
      areasName: string;
      /**
       * 设备录入时间
       */
      createTime: string;
      /**
       * 设备id
       */
      id: string;
      /**
       * 设备imei
       */
      imei: string;
      /**
       * 设备利润
       */
      incomePrice: number;
      /**
       * 设备最后更新时间
       */
      updateTime: string;
      /**
       * 设备上岗时间
       */
      workingStartTime?: string;
      /**
       * 设备工作状态
       */
      workingStatus: string;
    };
    DistributionPricingRulesRequest: {
      /**
       * 设备id
       */
      deviceId: string;
      /**
       * 设价规则id
       */
      pricingRulesGroupId: string;
    };
    FindAllAreasListResponse: {
      /**
       * 扁平结构的地市信息
       */
      flatAreas?: components["schemas"]["AreasBean"][];
      /**
       * 树结构的地市信息
       */
      treeAreas?: components["schemas"]["AreasTreeBean"][];
    };
    FindDeviceListForPageRequest: {
      /**
       * 地市id
       */
      areasId?: string;
      /**
       * 当前页码 索引位请从 1 开始 ， 如果不传，那么默认值 = 1
       */
      currPage?: number;
      /**
       * 设备的imei
       */
      deviceImei?: string;
      /**
       * 街道分配状态 如果希望查询已经分配的街道请传 true
       */
      distributionStatus?: boolean;
      /**
       * 每页的大小 最小值5 ， 最大值100，如果不传那么默认值 = 10
       */
      pageSize?: number;
      /**
       * 是否上岗工作 如果希望查询已经处于上岗状态的设备请传 true
       */
      workingStatus?: boolean;
    };
    FindDeviceListForPageResponse: {
      /**
       * 分页查询到的数据集中包含的地市
       */
      areasEntities?: components["schemas"]["AreasEntity"][];
      /**
       * 设备的所有模块部件信息
       */
      deviceModuleList?: components["schemas"]["DeviceModuleEntity"][];
      /**
       * 每组规则里面的具体规则项
       */
      listOfPricingRule?: components["schemas"]["PricingRulesEntity"][];
      /**
       * 分页查询中的设价规则组
       */
      listOfPricingRuleGroup?: components["schemas"]["PricingRulesGroupEntity"][];
      /**
       * 分页查询的返回结果
       */
      pageBean?: components["schemas"]["PageInfo«DeviceEntity»"];
    };
    FindOrderListForPageRequest: {
      /**
       * 当前页码 索引位请从 1 开始 ， 如果不传，那么默认值 = 1
       */
      current?: number;
      /**
       * 订单号
       */
      orderId?: string;
      /**
       * 每页的大小 最小值5 ， 最大值100，如果不传那么默认值 = 10
       */
      pageSize?: number;
    };
    FindOrderListForPageResponse: {
      /**
       * 订单详情信息
       */
      orderDetailEntries?: components["schemas"]["OrderDetailEntry"][];
      /**
       * 订单信息
       */
      orderEntityPageInfo?: components["schemas"]["PageInfo«OrderEntity»"];
    };
    FindOwnCarNumberResponse: {
      /**
       * 车牌号实体
       */
      customerCarBeans?: components["schemas"]["CustomerCarBean"][];
    };
    FindOwnInfoResponse: {
      /**
       * 个人信息
       */
      customerBean?: components["schemas"]["CustomerBean"];
    };
    FindOwnOrderListForPageRequest: {
      /**
       * 当前页
       */
      current?: number;
    };
    FindOwnOrderListForPageResponse: {
      orderEntityPageInfo?: components["schemas"]["PageInfo«OrderEntity»"];
    };
    FindParkedPageListRequest: {
      /**
       * 车牌号
       */
      carNumber?: string;
      /**
       * 当前页码
       */
      current?: number;
      /**
       * 设备imei
       */
      imei?: string;
      /**
       * 每页显示的数量
       */
      pageSize?: number;
    };
    FindParkedPageListResponse: {
      parkedImagesEntities?: components["schemas"]["ParkedImagesEntity"][];
      parkedPageInfo?: components["schemas"]["PageInfo«ParkedEntity»"];
    };
    FindPricingRulesGroupForPageRequest: {
      /**
       * 当前页码 索引位请从 1 开始 ， 如果不传，那么默认值 = 1
       */
      currPage?: string;
      /**
       * 规则组描述i信息
       */
      description: string;
      /**
       * id信息
       */
      id?: string;
      /**
       * 每页的大小 可传的值有 5 、 10 、 15 、 20 ，如果不传那么默认值 = 10
       */
      pageSize?: string;
    };
    FindPricingRulesGroupForPageResponse: {
      /**
       * 当前页码
       */
      currPage?: number;
      /**
       * 是否拥有下一页
       */
      hasNext?: boolean;
      /**
       * 是否拥有上一页
       */
      hasPrev?: boolean;
      /**
       * 每一页的大小
       */
      pageSize?: number;
      pricingRuleGroupsResponses?: components["schemas"]["PricingRuleGroupsResponse"][];
      /**
       * 规则总条数
       */
      totalCount?: number;
      /**
       * 总页数
       */
      totalPage?: number;
    };
    GetCheckCodeRequest: {
      /**
       * 手机号
       */
      mobile?: string;
    };
    GetCheckCodeResponse: {
      /**
       * 手机号
       */
      mobile?: string;
    };
    LoginOfEmployee: {
      /**
       * 员工账号
       */
      account?: string;
      /**
       * 账号创建时间
       */
      createTime?: string;
      /**
       * 员工邮箱
       */
      email?: string;
      /**
       * 员工编号
       */
      id?: string;
      /**
       * 员工手机号
       */
      mobile?: string;
      /**
       * 员工姓名
       */
      name?: string;
      /**
       * 账号最后更新时间
       */
      updateTime?: string;
    };
    LoginOfEmployeeRequest: {
      /**
       * 用户账号
       */
      account: string;
      /**
       * 用户密码
       */
      password: string;
    };
    LoginOfEmployeeResponse: {
      /**
       * 当前登录员工的基本信息
       */
      employee?: components["schemas"]["LoginOfEmployee"];
      /**
       * token有效市场（单位：分钟）
       */
      expired?: number;
      /**
       * 访问令牌
       */
      token?: string;
    };
    OrderDetailEntry: {
      amount?: number;
      createTime?: string;
      endTime?: string;
      id?: string;
      orderId?: string;
      price?: number;
      startTime?: string;
      unit?: number;
      updateTime?: string;
    };
    OrderEntity: {
      amount?: number;
      createTime?: string;
      customerId?: string;
      entryTime?: string;
      id?: string;
      imei?: string;
      leaveTime?: string;
      parkId?: string;
      payId?: string;
      status?: number;
      updateTime?: string;
      wechatPayId?: string;
    };
    "PageInfo«DeviceEntity»": {
      endRow?: number;
      firstPage?: number;
      hasNextPage?: boolean;
      hasPreviousPage?: boolean;
      isFirstPage?: boolean;
      isLastPage?: boolean;
      lastPage?: number;
      list?: components["schemas"]["DeviceEntity"][];
      navigateFirstPage?: number;
      navigateLastPage?: number;
      navigatePages?: number;
      navigatepageNums?: number[];
      nextPage?: number;
      pageNum?: number;
      pageSize?: number;
      pages?: number;
      prePage?: number;
      size?: number;
      startRow?: number;
      total?: number;
    };
    "PageInfo«OrderEntity»": {
      endRow?: number;
      firstPage?: number;
      hasNextPage?: boolean;
      hasPreviousPage?: boolean;
      isFirstPage?: boolean;
      isLastPage?: boolean;
      lastPage?: number;
      list?: components["schemas"]["OrderEntity"][];
      navigateFirstPage?: number;
      navigateLastPage?: number;
      navigatePages?: number;
      navigatepageNums?: number[];
      nextPage?: number;
      pageNum?: number;
      pageSize?: number;
      pages?: number;
      prePage?: number;
      size?: number;
      startRow?: number;
      total?: number;
    };
    "PageInfo«ParkedEntity»": {
      endRow?: number;
      firstPage?: number;
      hasNextPage?: boolean;
      hasPreviousPage?: boolean;
      isFirstPage?: boolean;
      isLastPage?: boolean;
      lastPage?: number;
      list?: components["schemas"]["ParkedEntity"][];
      navigateFirstPage?: number;
      navigateLastPage?: number;
      navigatePages?: number;
      navigatepageNums?: number[];
      nextPage?: number;
      pageNum?: number;
      pageSize?: number;
      pages?: number;
      prePage?: number;
      size?: number;
      startRow?: number;
      total?: number;
    };
    ParkedEntity: {
      carNumber?: string;
      createTime?: string;
      deleteTime?: string;
      enterTime?: string;
      id?: string;
      imei?: string;
      leaveTime?: string;
      updateTime?: string;
    };
    ParkedImagesEntity: {
      id?: string;
      parkedId?: string;
      type?: string;
      url?: string;
    };
    PricingRuleGroupsResponse: {
      /**
       * 规则组描述信息
       */
      description?: string;
      /**
       * 规则组id
       */
      id?: string;
      /**
       * 规则列表
       */
      pricingRulesResponses?: components["schemas"]["PricingRulesResponse"][];
    };
    PricingRulesEntity: {
      endTime?: string;
      id?: string;
      price?: number;
      pricingRulesGroupId?: string;
      startTime?: string;
      unit?: number;
    };
    PricingRulesGroupEntity: {
      createTime?: string;
      description?: string;
      id?: string;
      updateTime?: string;
    };
    PricingRulesRequest: {
      /**
       * 结束时间时间
       */
      endTime: string;
      /**
       * 价格(元)
       */
      price: number;
      /**
       * 开始时间
       */
      startTime: string;
      /**
       * 价格单位时长(分钟)
       */
      unit: number;
    };
    PricingRulesResponse: {
      /**
       * 结束时间
       */
      endTime?: string;
      /**
       * id值
       */
      id?: string;
      /**
       * 价格
       */
      price?: number;
      /**
       * 价格组id
       */
      pricingRulesGroupId?: string;
      /**
       * 开始时间
       */
      startTime?: string;
      /**
       * 单位
       */
      unit?: number;
    };
    ReportLeaveParkedInfoRequest: {
      /**
       * 识别出来的车牌号
       */
      carNumber?: string;
      /**
       * 拍摄的图片
       */
      file?: string;
      /**
       * 设备的imei
       */
      imei?: string;
    };
    ReportLeaveParkedInfoResponse: {
      parkedEntity?: components["schemas"]["ParkedEntity"];
    };
    ReportParkedInfoRequest: {
      /**
       * 识别出来的车牌号
       */
      carNumber?: string;
      /**
       * 拍摄的图片
       */
      file?: string;
      /**
       * 设备的imei
       */
      imei?: string;
    };
    ReportParkedInfoResponse: {
      carNumber?: string;
      createTime?: string;
      enterTime?: string;
      id?: string;
      leaveTime?: string;
      updateTime?: string;
    };
    StartWorkingRequest: {
      /**
       * 设备id
       */
      deviceId?: string;
    };
    StartWorkingResponse: {
      /**
       * 设备所属地区id
       */
      areasId?: string;
      /**
       * 设备的录入时间
       */
      createTime?: string;
      /**
       * 设备id
       */
      id?: string;
      /**
       * 设备的imei码
       */
      imei?: string;
      /**
       * 设备盈利的金额
       */
      incomePrice?: number;
      /**
       * 设备的最后更新时间
       */
      updateTime?: string;
      /**
       * 设备的上岗时间
       */
      workingStartTime?: string;
      /**
       * 设备的工作状态
       */
      workingStatus?: string;
    };
    UnifiedOrderRequest: {
      /**
       * 订单编号
       */
      orderId?: string;
    };
    UnifiedOrderResponse: { weAppPayConfig?: { [key: string]: any } };
    UpdatePricingRulesRequest: {
      /**
       * 设价规则描述信息
       */
      description: string;
      /**
       * 规则组id
       */
      groupId: string;
      /**
       * 设价规则列表
       */
      pricingRulesRequests: components["schemas"]["PricingRulesRequest"][];
    };
    UpdatePricingRulesResponse: {
      description?: string;
      /**
       * id信息
       */
      id?: string;
      pricingRulesRequests?: components["schemas"]["PricingRulesRequest"][];
    };
  };
}
